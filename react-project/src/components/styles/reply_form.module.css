/* Reply Form */
/* Post Form Component Styles */

.postFormContainer {
    background: var(--bg-secondary);
    border-radius: 16px;
    padding: 2rem;
    border: 1px solid var(--border);
    box-shadow:
        0 10px 40px rgba(0, 0, 0, 0.3),
        0 4px 16px rgba(0, 0, 0, 0.2);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    width: 100%;
    /* Add this */
    max-width: 100%;
    /* Increase this if needed */
    margin: 0 auto;
    margin-bottom: 15px;
}

.postFormContainer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg,
            transparent,
            var(--accent) 20%,
            var(--accent-hover) 50%,
            var(--accent) 80%,
            transparent);
    opacity: 0.8;
}

.postFormTitle {
    color: var(--text-primary);
    font-size: 1.75rem;
    font-weight: 700;
    margin: 0 0 2rem 0;
    background: linear-gradient(135deg, var(--text-primary), var(--accent-hover));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-align: center;
    position: relative;
}

.postFormTitle::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(90deg, var(--accent), var(--accent-hover));
    border-radius: 2px;
}

/* Error Message Styling */
.errorMessage {
    background: linear-gradient(135deg, #ff4444, #cc3333);
    color: white;
    padding: 1rem 1.25rem;
    border-radius: 10px;
    margin-bottom: 1.5rem;
    border: 1px solid #ff6666;
    box-shadow: 0 4px 12px rgba(255, 68, 68, 0.2);
    font-weight: 500;
    position: relative;
    animation: slideInError 0.3s ease-out;
}

@keyframes slideInError {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.errorMessage::before {
    content: '⚠️';
    margin-right: 0.5rem;
    font-size: 1.1rem;
}

/* Form Group Styling */
.formGroup {
    margin-bottom: 2rem;
}

.label {
    display: block;
    color: var(--text-primary);
    font-weight: 600;
    margin-bottom: 0.75rem;
    font-size: 1rem;
    letter-spacing: 0.3px;
}

/* Title Input Styling */
.titleInput {
    width: 100%;
    padding: 1rem 1.25rem;
    background: var(--bg-tertiary);
    border: 2px solid var(--border);
    border-radius: 10px;
    color: var(--text-primary);
    font-size: 1rem;
    font-weight: 500;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    outline: none;
    position: relative;
}

.titleInput::placeholder {
    color: var(--text-secondary);
    font-weight: 400;
    font-style: italic;
}

.titleInput:focus {
    border-color: var(--accent);
    box-shadow:
        0 0 0 3px rgba(98, 0, 238, 0.1),
        0 4px 12px rgba(98, 0, 238, 0.15);
    background: var(--bg-secondary);
    transform: translateY(-1px);
}

.titleInput:hover:not(:focus) {
    border-color: var(--accent);
    background: var(--bg-secondary);
}

.titleInput:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background: var(--bg-primary);
}

/* Quill Container */
.quillContainer {
    color: var(--text-primary);
    margin-bottom: 2rem;
    border-radius: 12px;
    overflow: hidden;
    border: 2px solid var(--border);
    transition: all 0.3s ease;
    background: var(--bg-tertiary);
}

.quillContainer:focus-within {
    border-color: var(--accent);
    box-shadow:
        0 0 0 3px rgba(98, 0, 238, 0.1),
        0 4px 12px rgba(98, 0, 238, 0.15);
    transform: translateY(-1px);
}

/* ReactQuill Custom Styling */
.replyQuillEditor .ql-toolbar {
    background: var(--bg-secondary);
    border: none;
    border-bottom: 1px solid var(--border);
    padding: 1rem;
}

.replyQuillEditor .ql-toolbar .ql-stroke {
    stroke: var(--text-secondary);
    transition: stroke 0.2s ease;
}

.replyQuillEditor .ql-toolbar .ql-fill {
    fill: var(--text-secondary);
    transition: fill 0.2s ease;
}

.replyQuillEditor .ql-toolbar button:hover .ql-stroke {
    stroke: var(--accent);
}

.replyQuillEditor .ql-toolbar button:hover .ql-fill {
    fill: var(--accent);
}

.replyQuillEditor .ql-toolbar button.ql-active .ql-stroke {
    stroke: var(--accent-hover);
}

.replyQuillEditor .ql-toolbar button.ql-active .ql-fill {
    fill: var(--accent-hover);
}

.replyQuillEditor .ql-toolbar button {
    border-radius: 6px;
    transition: all 0.2s ease;
    margin: 0 2px;
}

.replyQuillEditor .ql-toolbar button:hover {
    background: rgba(98, 0, 238, 0.1);
}

.replyQuillEditor .ql-toolbar button.ql-active {
    background: rgba(98, 0, 238, 0.2);
}

.replyQuillEditor .ql-container {
    background: var(--bg-tertiary);
    color: var(--text-primary);
    border: none;
    font-size: 1rem;
    line-height: 1.6;
    min-height: 200px;
}

.replyQuillEditor .ql-editor {
    padding: 1.5rem;
    color: var(--text-primary);
    min-height: 200px;
}

.replyQuillEditor .ql-editor.ql-blank::before {
    color: var(--text-secondary);
    font-style: italic;
    font-weight: 400;
}

.replyQuillEditor .ql-editor p,
.replyQuillEditor .ql-editor h1,
.replyQuillEditor .ql-editor h2,
.replyQuillEditor .ql-editor h3 {
    color: var(--text-primary);
}

.replyQuillEditor .ql-editor strong {
    color: var(--accent-hover);
}

.replyQuillEditor .ql-editor em {
    color: var(--text-secondary);
}

.replyQuillEditor .ql-editor a {
    color: var(--accent);
    text-decoration: underline;
}

.replyQuillEditor .ql-editor blockquote {
    border-left: 4px solid var(--accent);
    background: rgba(98, 0, 238, 0.05);
    color: var(--text-secondary);
    font-style: italic;
}

.replyQuillEditor .ql-editor code {
    background: var(--bg-primary);
    color: var(--accent-hover);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    border: 1px solid var(--border);
}

.replyQuillEditor .ql-editor pre {
    background: var(--bg-primary);
    border: 1px solid var(--border);
    border-radius: 8px;
}

/* Submit Row */
.submitRow {
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    align-items: center;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border);
}

/* Button Base Styles */
.submitBtn,
.cancelBtn {
    padding: 0.875rem 2rem;
    border-radius: 10px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    position: relative;
    overflow: hidden;
    border: none;
}

/* Submit Button */
.submitBtn {
    background: linear-gradient(135deg, var(--accent), var(--accent-hover));
    color: white;
    box-shadow:
        0 4px 16px rgba(98, 0, 238, 0.3),
        0 2px 8px rgba(98, 0, 238, 0.2);
}

.submitBtn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.6s ease;
}

.submitBtn:hover::before {
    left: 100%;
}

.submitBtn:hover {
    transform: translateY(-2px);
    box-shadow:
        0 8px 24px rgba(98, 0, 238, 0.4),
        0 4px 12px rgba(98, 0, 238, 0.3);
    background: linear-gradient(135deg, var(--accent-hover), var(--accent));
}

.submitBtn:active {
    transform: translateY(0);
    transition: transform 0.1s ease;
}

.submitBtn:disabled {
    background: linear-gradient(135deg, var(--text-secondary), var(--border));
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
    opacity: 0.6;
}

.submitBtn:disabled::before {
    display: none;
}

/* Cancel Button */
.cancelBtn {
    background: transparent;
    border: 2px solid var(--text-secondary);
    color: var(--text-secondary);
}

.cancelBtn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(160, 160, 160, 0.1), transparent);
    transition: left 0.6s ease;
}

.cancelBtn:hover::before {
    left: 100%;
}

.cancelBtn:hover {
    border-color: var(--text-primary);
    color: var(--text-primary);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(160, 160, 160, 0.2);
}

.cancelBtn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

/* Focus States */
.submitBtn:focus,
.cancelBtn:focus,
.titleInput:focus {
    outline: 2px solid var(--accent);
    outline-offset: 2px;
}

.submitBtn:focus:not(:focus-visible),
.cancelBtn:focus:not(:focus-visible),
.titleInput:focus:not(:focus-visible) {
    outline: none;
}

/* Responsive Design */
@media (max-width: 768px) {
    .postFormContainer {
        padding: 1.5rem;
        margin: 0.5rem;
        border-radius: 12px;
    }

    .postFormTitle {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .formGroup {
        margin-bottom: 1.5rem;
    }

    .quillContainer {
        margin-bottom: 1.5rem;
    }

    .replyQuillEditor .ql-container {
        min-height: 150px;
    }

    .replyQuillEditor .ql-editor {
        min-height: 150px;
        padding: 1rem;
    }

    .submitRow {
        flex-direction: column-reverse;
        gap: 0.75rem;
        padding-top: 1rem;
    }

    .submitBtn,
    .cancelBtn {
        width: 100%;
        justify-content: center;
        padding: 1rem 2rem;
    }
}

@media (max-width: 480px) {
    .postFormContainer {
        padding: 1rem;
    }

    .postFormTitle {
        font-size: 1.25rem;
    }

    .titleInput {
        padding: 0.875rem 1rem;
        font-size: 0.95rem;
    }

    .replyQuillEditor .ql-toolbar {
        padding: 0.75rem;
    }

    .replyQuillEditor .ql-editor {
        padding: 1rem;
    }
}

/* Loading State */
.postFormContainer.loading {
    opacity: 0.7;
    pointer-events: none;
}

.postFormContainer.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 40px;
    height: 40px;
    border: 3px solid var(--border);
    border-top: 3px solid var(--accent);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }

    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {

    .postFormContainer,
    .titleInput,
    .quillContainer,
    .submitBtn,
    .cancelBtn {
        transition: none;
    }

    .errorMessage {
        animation: none;
    }

    .submitBtn::before,
    .cancelBtn::before {
        display: none;
    }
}

/* High contrast mode */
@media (prefers-contrast: high) {
    .postFormContainer {
        border-width: 2px;
    }

    .titleInput,
    .quillContainer {
        border-width: 3px;
    }

    .submitBtn,
    .cancelBtn {
        border-width: 2px;
        font-weight: 700;
    }
}

.descriptionTextarea {
    width: 100%;
    padding: 1rem 1.25rem;
    background: var(--bg-tertiary);
    border: 2px solid var(--border);
    border-radius: 10px;
    color: var(--text-primary);
    font-size: 1rem;
    font-weight: 400;
    line-height: 0.5;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    outline: none;
    resize: vertical;
    min-height: 30px;
    font-family: inherit;
}

.descriptionTextarea::placeholder {
    color: var(--text-secondary);
    font-weight: 400;
    font-style: italic;
}

.descriptionTextarea:focus {
    border-color: var(--accent);
    box-shadow:
        0 0 0 3px rgba(98, 0, 238, 0.1),
        0 4px 12px rgba(98, 0, 238, 0.15);
    background: var(--bg-secondary);
    transform: translateY(-1px);
}

.descriptionTextarea:hover:not(:focus) {
    border-color: var(--accent);
    background: var(--bg-secondary);
}

.descriptionTextarea:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background: var(--bg-primary);
    resize: none;
}

/* Character Counter */
.descriptionGroup {
    position: relative;
}

:global(.ql-editor .image-container) {
    /* This ensures the container doesn't add unwanted padding or margins */
    line-height: 1;
}

:global(.ql-editor .image-container img) {
    width: 400px;
    /* Or your desired fixed width */
    max-width: 100%;
    height: auto;
    display: block;
}